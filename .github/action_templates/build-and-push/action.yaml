name: build and push template
description: "A template to build and push docker image based on provided inputs"

inputs:
  docker-auth-token:
    description: 'Docker Hub authentication token'
    required: true
  image-name:
    description: 'image name to be built'
    required: true
  dockerfile-name:
    description: 'The name of dockerfile to use'
    required: true

runs:
  using: "composite"
  steps:
    - name: Set push to true
      shell: bash
      run: |
        echo "PUSH=true" >> "$GITHUB_ENV"
    - name: Set push to false
      shell: bash
      run: |
        echo "PUSH=false" >> "$GITHUB_ENV"
        echo "${{github.event.pull_request.head.repo.full_name}}"
      if: ${{ !startsWith(github.event.pull_request.head.repo.full_name, 'CIROH-UA') }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Set env vars for main branch
      shell: bash
      run: |
        echo "TAG_NAME=latest" >> "$GITHUB_ENV"
      if: startsWith(github.ref, 'refs/heads/main')
    - name: Set env vars for other branch
      shell: bash
      run: |
        echo "TAG_NAME=${GITHUB_REF##*/}" >> "$GITHUB_ENV"
      if: ${{ !startsWith(github.ref, 'refs/heads/main') }}
    
    - name: Login to Docker Hub
      shell: bash
      run: |
          echo "${{ inputs.docker-auth-token }}" | docker login --username awiciroh --password-stdin
      if: ${{ startsWith(github.event.pull_request.head.repo.full_name, 'CIROH-UA') }}
    
    - name: Create Cache and Builder for Buildx
      shell: bash
      run: |
          docker buildx create --use --name mybuilder --node mybuilder

    - name: Build and Cache Docker Image
      uses: docker/build-push-action@v2
      with:
        context: ./docker
        file: ./docker/${{ inputs.dockerfile-name}}
        build-args: |
          TAG_NAME=${{ env.TAG_NAME}}
        push: ${{env.PUSH}}
        platforms: linux/arm64
        tags: |
          awiciroh/${{ inputs.image-name}}:${{ env.TAG_NAME}}
        builder: mybuilder
        no-cache: true
      env:
        DOCKER_BUILDKIT: 1
        DOCKER_CLI_EXPERIMENTAL: enabled
